{"version":3,"sources":["components/Blog.js","services/blogs.js","components/Notification.js","components/LoginForm.js","components/BlogForm.js","components/Togglable.js","services/login.js","App.js","index.js"],"names":["Blog","blog","updateBlog","useState","blogView","setBlogView","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","style","title","author","onClick","url","likes","newBlog","user","id","handleLike","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","setToken","newToken","update","put","Notification","message","includes","className","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","value","onChange","type","BlogForm","createBlog","setNewBlog","newAuthor","setNewAuthor","newUrl","setNewUrl","event","preventDefault","target","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","buttonLabel2","login","credentials","App","blogs","setBlogs","setUsername","setPassword","errorMessage","setErrorMessage","setUser","blogFormRef","useRef","useEffect","blogService","addBlog","blogObject","current","returnedBlog","setTimeout","concat","catch","error","handleLogin","loginService","window","localStorage","setItem","JSON","stringify","name","console","log","removeItem","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.add57ddd.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nconst Blog = ({blog, updateBlog}) => {\r\n  const [blogView, setBlogView] = useState(false)\r\n\r\n  const handleLike = (blog) => {\r\n    const newBlog = {\r\n        title: blog.title,\r\n        url: blog.url,\r\n        likes: blog.likes + 1,\r\n        author: blog.author,\r\n        user: blog.user,\r\n        id: blog.id\r\n    }\r\n    updateBlog(newBlog)\r\n}\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n if (blogView === false) {\r\n  return (\r\n    <div style={blogStyle}>\r\n    {blog.title} {blog.author} <button onClick={() => setBlogView(true)}> view</button>\r\n  </div>  \r\n)}\r\nreturn (\r\n  <div style={blogStyle}>\r\n  {blog.title} <button onClick={() => setBlogView(false)}> hide</button> <br/>\r\n  {blog.url} <br/>\r\n  {blog.likes} <button onClick={() => handleLike(blog)}> like</button> <br/>\r\n  {blog.author}\r\n</div> \r\n)\r\n  }\r\n\r\nexport default Blog","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, create, setToken, update }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  else {\r\n  if (message.includes(\"error\")) {\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\nreturn (\r\n  <div className=\"noterror\">\r\n    {message}\r\n  </div>\r\n)\r\n}\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst LoginForm = ({\r\n   handleSubmit,\r\n   handleUsernameChange,\r\n   handlePasswordChange,\r\n   username,\r\n   password\r\n  }) => {\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          username\r\n          <input\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n      </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React, {useState} from 'react' \r\n\r\nconst BlogForm = ({createBlog}) => {\r\n  const [newBlog, setNewBlog] = useState('')\r\n  const [newAuthor, setNewAuthor] = useState('')\r\n  const [newUrl, setNewUrl] = useState('')\r\n\r\n  const handleBlogChange = (event) => {\r\n    setNewBlog(event.target.value)\r\n  }\r\n\r\n  const handleAuthorChange = (event) => {\r\n    setNewAuthor(event.target.value)\r\n  }\r\n\r\n  const handleUrlChange = (event) => {\r\n    setNewUrl(event.target.value)\r\n  }\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    createBlog({\r\n      title: newBlog,\r\n      author: newAuthor,\r\n      url: newUrl,  \r\n    })\r\n      setNewBlog('')\r\n      setNewAuthor('')\r\n      setNewUrl('')\r\n  }\r\n\r\n    return (\r\n      <div>\r\n        <h2>create new</h2>\r\n  \r\n        <form onSubmit={addBlog}>\r\n        <div>\r\n          <input\r\n            value={newBlog}\r\n            onChange={handleBlogChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            value={newAuthor}\r\n            onChange={handleAuthorChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            value={newUrl}\r\n            onChange={handleUrlChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">\r\n            create</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n \r\n  export default BlogForm","import React, { useState, useImperativeHandle } from 'react'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n \r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>{props.buttonLabel2}</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Togglable","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport Notification from './components/Notification'\r\nimport LoginForm from './components/LoginForm'\r\nimport BlogForm from './components/BlogForm'\r\nimport Togglable from './components/Togglable'\r\nimport loginService from './services/login' \r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [user, setUser] = useState(null)\r\n  const blogFormRef = useRef()\r\n\r\n  useEffect(() => {\r\n    blogService.getAll()\r\n    .then(blogs =>\r\n      setBlogs( blogs )\r\n    )  \r\n  }, [])\r\n\r\n  const addBlog = (blogObject) => {\r\n    blogFormRef.current.toggleVisibility()\r\n    blogService\r\n    .create(blogObject)\r\n    .then(returnedBlog => { \r\n      setErrorMessage (`a new blog ${blogObject.title} by ${blogObject.author} was added`)\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n      setBlogs(blogs.concat(returnedBlog))\r\n    }) \r\n    .catch(error => {\r\n      setErrorMessage (`error: wrong format`)\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)})\r\n  }\r\n\r\n  const updateBlog = async (blog) => {\r\n    await blogService\r\n    .update(blog.id, blog)\r\n    /*const index = blogs.findIndex((blogToUpdate) => blogToUpdate.id === blog.id)\r\n    const updatedBlogs = [...blogs]*/\r\n    blogs[blog.id] = blog\r\n    setBlogs(blogs)\r\n}\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    \r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      ) \r\n\r\n      blogService.setToken(user.token)\r\n  \r\n      setUsername('')\r\n      setPassword('')\r\n      setUser(user)\r\n    } catch (exception) {\r\n      setErrorMessage('error: wrong username or password')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <Togglable buttonLabel=\"log in\" buttonLabel2=\"cancel\">\r\n          <LoginForm\r\n            username={username}\r\n            password={password}\r\n            handleUsernameChange={({ target }) => setUsername(target.value)}\r\n            handlePasswordChange={({ target }) => setPassword(target.value)}\r\n            handleSubmit={handleLogin}\r\n          />\r\n          </Togglable>\r\n  )\r\n  \r\n  const handleLogout = () => {\r\n    console.log(\"logout\")\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n    setUser(null)\r\n  }\r\n\r\n  const blogForm = () => (\r\n   <Togglable buttonLabel=\"create new blog\" buttonLabel2=\"cancel\" ref={blogFormRef}>\r\n      <BlogForm createBlog={addBlog} /> \r\n    </Togglable >\r\n  )  \r\n\r\n  if (user === null) {\r\n    return (\r\n      <div>\r\n        <h2>log in to application</h2>\r\n        <Notification message={errorMessage} />\r\n        {loginForm()}\r\n      </div>\r\n    )\r\n  }\r\n      \r\n  return (\r\n    \r\n    <div>\r\n      <h2>blogs</h2>\r\n      <Notification message={errorMessage} />\r\n      <p>{user.name} logged in <button onClick={handleLogout}> logout</button> </p>\r\n\r\n      {blogForm()}\r\n\r\n      {blogs.map(blog =>\r\n        <Blog key={blog.id} blog={blog} updateBlog={updateBlog}/>\r\n      )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}