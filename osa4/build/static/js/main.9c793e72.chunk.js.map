{"version":3,"sources":["components/Blog.js","services/blogs.js","components/Notification.js","components/LoginForm.js","components/Togglable.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","setToken","newToken","Notification","message","includes","className","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","value","onChange","type","Togglable","props","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","style","onClick","buttonLabel","children","login","credentials","App","blogs","setBlogs","newBlog","setNewBlog","newAuthor","setNewAuthor","newUrl","setNewUrl","setUsername","setPassword","errorMessage","setErrorMessage","user","setUser","useEffect","blogService","addBlog","event","preventDefault","blogObject","url","returnedBlog","setTimeout","concat","catch","error","handleBlogChange","console","log","target","handleAuthorChange","handleUrlChange","handleLogin","loginService","window","localStorage","setItem","JSON","stringify","name","removeItem","map","id","ReactDOM","render","document","getElementById"],"mappings":"0NAOeA,EANF,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OACX,gCACGA,EAAKC,MADR,IACgBD,EAAKE,W,gBCFjBC,EAAU,aAEZC,EAAQ,KAoBG,GAAEC,OALF,WAEb,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAGlBC,OAdb,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,IAFf,SAKUE,IAAMW,KAAKd,EAASS,EAAWE,GALzC,cAKPL,EALO,yBAMNA,EAASC,MANH,2CAAH,sDAcqBQ,SAlBhB,SAAAC,GACff,EAAK,iBAAae,KCgBLC,EApBM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGLA,EAAQC,SAAS,SAEnB,qBAAKC,UAAU,QAAf,SACGF,IAKL,qBAAKE,UAAU,WAAf,SACGF,KCmBUG,EAjCG,SAAC,GAMV,IALNC,EAKK,EALLA,aACAC,EAIK,EAJLA,qBACAC,EAGK,EAHLA,qBACAC,EAEK,EAFLA,SACAC,EACK,EADLA,SAED,OACE,gCACE,uCAEA,uBAAMC,SAAUL,EAAhB,UACE,2CAEE,uBACEM,MAAOH,EACPI,SAAUN,OAGd,2CAEE,uBACEO,KAAK,WACLF,MAAOF,EACPG,SAAUL,OAGd,wBAAQM,KAAK,SAAb,0BCJOC,EAvBG,SAACC,GAAW,IAAD,EACGC,oBAAS,GADZ,mBACpBC,EADoB,KACXC,EADW,KAGrBC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAE5CK,EAAmB,WACvBJ,GAAYD,IAGd,OACE,gCACE,qBAAKM,MAAOJ,EAAZ,SACE,wBAAQK,QAASF,EAAjB,SAAoCP,EAAMU,gBAE5C,sBAAKF,MAAOF,EAAZ,UACGN,EAAMW,SACP,wBAAQF,QAASF,EAAjB,2BCXO,GAAEK,MALN,uCAAG,WAAMC,GAAN,eAAAnC,EAAA,sEACWP,IAAMW,KAHf,aAG6B+B,GAD/B,cACNvC,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDCqKIuC,EAhKH,WAAO,IAAD,EACUb,mBAAS,IADnB,mBACTc,EADS,KACFC,EADE,OAEcf,mBAAS,IAFvB,mBAETgB,EAFS,KAEAC,EAFA,OAGkBjB,mBAAS,IAH3B,mBAGTkB,EAHS,KAGEC,EAHF,OAIYnB,mBAAS,IAJrB,mBAIToB,EAJS,KAIDC,EAJC,OAKgBrB,mBAAS,IALzB,mBAKTR,EALS,KAKC8B,EALD,OAMgBtB,mBAAS,IANzB,mBAMTP,EANS,KAMC8B,EAND,OAOwBvB,mBAAS,MAPjC,mBAOTwB,EAPS,KAOKC,EAPL,OAQwBzB,oBAAS,GARjC,gCASQA,mBAAS,OATjB,mBAST0B,EATS,KASHC,EATG,KAWhBC,qBAAU,WACRC,EAAY5D,SACXG,MAAK,SAAA0C,GAAK,OACTC,EAAUD,QAEX,IAEH,IAAMgB,EAAU,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBpE,MAAOmD,EACPlD,OAAQoD,EACRgB,IAAKd,GAGPS,EACCtD,OAAO0D,GACP7D,MAAK,SAAA+D,GACJV,EAAe,qBAAgBT,EAAhB,eAA8BE,EAA9B,eACbkB,YAAW,WACTX,EAAgB,QACf,KACLV,EAASD,EAAMuB,OAAOF,IACtBlB,EAAW,IACXE,EAAa,IACbE,EAAU,OAEXiB,OAAM,SAAAC,GACLd,EAAe,uBACfW,YAAW,WACTX,EAAgB,QACf,SAGDe,EAAmB,SAACT,GACxBU,QAAQC,IAAIX,EAAMY,OAAOhD,OACzBsB,EAAWc,EAAMY,OAAOhD,QAGpBiD,EAAqB,SAACb,GAC1BU,QAAQC,IAAIX,EAAMY,OAAOhD,OACzBwB,EAAaY,EAAMY,OAAOhD,QAGtBkD,EAAkB,SAACd,GACvBU,QAAQC,IAAIX,EAAMY,OAAOhD,OACzB0B,EAAUU,EAAMY,OAAOhD,QAGnBmD,EAAW,uCAAG,WAAOf,GAAP,eAAAtD,EAAA,6DAClBsD,EAAMC,iBADY,kBAIGe,EAAapC,MAAM,CACpCnB,WAAUC,aALI,OAIViC,EAJU,OAQhBsB,OAAOC,aAAaC,QAClB,oBAAqBC,KAAKC,UAAU1B,IAGtCG,EAAY/C,SAAS4C,EAAK1D,OAE1BsD,EAAY,IACZC,EAAY,IACZI,EAAQD,GAhBQ,kDAkBhBD,EAAgB,qCAChBW,YAAW,WACTX,EAAgB,QACf,KArBa,0DAAH,sDA0EjB,OAAa,OAATC,EAEA,gCACE,uDACA,cAAC,EAAD,CAAczC,QAASuC,IApD3B,cAAC,EAAD,CAAWf,YAAY,SAAvB,SACM,cAAC,EAAD,CACEjB,SAAUA,EACVC,SAAUA,EACVH,qBAAsB,gBAAGqD,EAAH,EAAGA,OAAH,OAAgBrB,EAAYqB,EAAOhD,QACzDJ,qBAAsB,gBAAGoD,EAAH,EAAGA,OAAH,OAAgBpB,EAAYoB,EAAOhD,QACzDN,aAAcyD,SAqDtB,gCACE,uCACA,cAAC,EAAD,CAAc7D,QAASuC,IACvB,8BAAIE,EAAK2B,KAAT,cAAyB,wBAAQ7C,QAnDhB,WACnBiC,QAAQC,IAAI,UACZM,OAAOC,aAAaK,WAAW,qBAC/B3B,EAAQ,OAgDmB,qBAAzB,OA5CF,uBAAMjC,SAAUoC,EAAhB,UACE,4CACA,yCACQ,uBACPjC,KAAK,OACLF,MAAOqB,EACPqC,KAAK,QACJzD,SAAU4C,OAGZ,0CACS,uBACP3C,KAAK,OACLF,MAAOuB,EACPmC,KAAK,SACLzD,SAAUgD,OAGZ,uCACM,uBACJ/C,KAAK,OACLF,MAAOyB,EACPiC,KAAK,MACLzD,SAAUiD,OAGZ,wBAAQhD,KAAK,SAAb,uBAsBCiB,EAAMyC,KAAI,SAAA3F,GAAI,OACb,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAK4F,W,MC5JxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9c793e72.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({blog}) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>  \r\n)\r\n\r\nexport default Blog","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, setToken }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  else {\r\n  if (message.includes(\"error\")) {\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\nreturn (\r\n  <div className=\"noterror\">\r\n    {message}\r\n  </div>\r\n)\r\n}\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst LoginForm = ({\r\n   handleSubmit,\r\n   handleUsernameChange,\r\n   handlePasswordChange,\r\n   username,\r\n   password\r\n  }) => {\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          username\r\n          <input\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n      </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React, { useState } from 'react'\r\n\r\nconst Togglable = (props) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Togglable","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport Notification from './components/Notification'\r\nimport LoginForm from './components/LoginForm'\r\nimport Togglable from './components/Togglable'\r\nimport loginService from './services/login' \r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [newBlog, setNewBlog] = useState('')\r\n  const [newAuthor, setNewAuthor] = useState('')\r\n  const [newUrl, setNewUrl] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [loginVisible, setLoginVisible] = useState(false)\r\n  const [user, setUser] = useState(null)\r\n\r\n  useEffect(() => {\r\n    blogService.getAll()\r\n    .then(blogs =>\r\n      setBlogs( blogs )\r\n    )  \r\n  }, [])\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    const blogObject = {\r\n      title: newBlog,\r\n      author: newAuthor,\r\n      url: newUrl,\r\n      \r\n    }\r\n    blogService\r\n    .create(blogObject)\r\n    .then(returnedBlog => { \r\n      setErrorMessage (`a new blog ${newBlog} by ${newAuthor} was added`)\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n      setBlogs(blogs.concat(returnedBlog))\r\n      setNewBlog('')\r\n      setNewAuthor('')\r\n      setNewUrl('')\r\n    }) \r\n    .catch(error => {\r\n      setErrorMessage (`error: wrong format`)\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)})\r\n  }\r\n\r\n  const handleBlogChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewBlog(event.target.value)\r\n  }\r\n\r\n  const handleAuthorChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewAuthor(event.target.value)\r\n  }\r\n\r\n  const handleUrlChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewUrl(event.target.value)\r\n  }\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    \r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      ) \r\n\r\n      blogService.setToken(user.token)\r\n  \r\n      setUsername('')\r\n      setPassword('')\r\n      setUser(user)\r\n    } catch (exception) {\r\n      setErrorMessage('error: wrong username or password')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <Togglable buttonLabel=\"log in\">\r\n          <LoginForm\r\n            username={username}\r\n            password={password}\r\n            handleUsernameChange={({ target }) => setUsername(target.value)}\r\n            handlePasswordChange={({ target }) => setPassword(target.value)}\r\n            handleSubmit={handleLogin}\r\n          />\r\n          </Togglable>\r\n  )\r\n  \r\n  const handleLogout = () => {\r\n    console.log(\"logout\")\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n    setUser(null)\r\n  }\r\n\r\n  const blogForm = () => (\r\n    <form onSubmit={addBlog}>\r\n      <h2>create new</h2>\r\n      <div>\r\n        title:<input\r\n       type=\"text\"\r\n       value={newBlog}\r\n       name=\"Title\"\r\n        onChange={handleBlogChange}\r\n      />\r\n      </div>\r\n      <div>\r\n        author:<input\r\n        type=\"text\"\r\n        value={newAuthor}\r\n        name=\"Author\"\r\n        onChange={handleAuthorChange}\r\n      />\r\n      </div>\r\n      <div>\r\n        url:<input\r\n        type=\"text\"\r\n        value={newUrl}\r\n        name=\"Url\"\r\n        onChange={handleUrlChange}\r\n      />\r\n      </div>\r\n      <button type=\"submit\">create</button>\r\n    </form>  \r\n  )  \r\n\r\n  if (user === null) {\r\n    return (\r\n      <div>\r\n        <h2>log in to application</h2>\r\n        <Notification message={errorMessage} />\r\n        {loginForm()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>blogs</h2>\r\n      <Notification message={errorMessage} />\r\n      <p>{user.name} logged in <button onClick={handleLogout}> logout</button> </p>\r\n\r\n      {blogForm()}\r\n\r\n      {blogs.map(blog =>\r\n        <Blog key={blog.id} blog={blog} />\r\n      )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}