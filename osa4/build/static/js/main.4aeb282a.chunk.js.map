{"version":3,"sources":["components/Blog.js","services/blogs.js","components/Notification.js","components/LoginForm.js","components/BlogForm.js","components/Togglable.js","services/login.js","App.js","index.js"],"names":["Blog","blog","updateBlog","handleRemove","user","useState","blogView","setBlogView","handleLike","newBlog","title","url","likes","author","id","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","style","onClick","name","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","setToken","newToken","update","put","remove","delete","Notification","message","includes","className","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","value","onChange","type","BlogForm","createBlog","setNewBlog","newAuthor","setNewAuthor","newUrl","setNewUrl","event","preventDefault","target","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","buttonLabel2","displayName","login","credentials","App","blogs","setBlogs","setUsername","setPassword","errorMessage","setErrorMessage","setUser","blogFormRef","useRef","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","addBlog","blogObject","current","returnedBlog","setTimeout","concat","catch","index","findIndex","blogToUpdate","updatedBlogs","handleLogin","loginService","setItem","stringify","confirm","filter","b","console","log","removeItem","sort","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4aeb282a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nconst Blog = ({ blog, updateBlog, handleRemove, user }) => {\r\n  const [blogView, setBlogView] = useState(false)\r\n\r\n  const handleLike = (blog) => {\r\n    const newBlog = {\r\n        title: blog.title,\r\n        url: blog.url,\r\n        likes: blog.likes + 1,\r\n        author: blog.author,\r\n        user: blog.user,\r\n        id: blog.id\r\n    }\r\n    updateBlog(newBlog)\r\n}\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n if (blogView === false) {\r\n  return (\r\n    <div style={blogStyle}>\r\n    {blog.title} {blog.author} <button onClick={() => setBlogView(true)}> view</button>\r\n  </div>\r\n)}\r\nif (blog.user.name === user.name)\r\n {\r\nreturn (\r\n  <div style={blogStyle}>\r\n  {blog.title} {blog.author} <button onClick={() => setBlogView(false)}> hide</button> <br/>\r\n  {blog.url} <br/>\r\n  {blog.likes} <button onClick={() => handleLike(blog)}> like</button> <br/>\r\n  {blog.user.name} <br/>\r\n\r\n  <button onClick={() => handleRemove(blog)}> remove</button>\r\n  </div>)\r\n}\r\nreturn (\r\n  <div style={blogStyle}>\r\n  {blog.title} {blog.author} <button onClick={() => setBlogView(false)}> hide</button> <br/>\r\n  {blog.url} <br/>\r\n  {blog.likes} <button onClick={() => handleLike(blog)}> like</button> <br/>\r\n  {blog.user.name}\r\n  </div>)\r\n\r\n  }\r\n\r\nexport default Blog","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\r\n  return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\nreturn response.data\r\n}\r\n\r\nexport default { getAll, create, setToken, update, remove }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  else {\r\n  if (message.includes('error')) {\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\nreturn (\r\n  <div className=\"noterror\">\r\n    {message}\r\n  </div>\r\n)\r\n}\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = ({\r\n   handleSubmit,\r\n   handleUsernameChange,\r\n   handlePasswordChange,\r\n   username,\r\n   password\r\n  }) => {\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          username\r\n          <input\r\n            id='username'\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            id='password'\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n      </div>\r\n        <button id=\"login-button\" type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleUsernameChange: PropTypes.func.isRequired,\r\n  handlePasswordChange: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired\r\n}\r\n\r\nexport default LoginForm","import React, { useState } from 'react'\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n  const [newBlog, setNewBlog] = useState('')\r\n  const [newAuthor, setNewAuthor] = useState('')\r\n  const [newUrl, setNewUrl] = useState('')\r\n\r\n  const handleBlogChange = (event) => {\r\n    setNewBlog(event.target.value)\r\n  }\r\n\r\n  const handleAuthorChange = (event) => {\r\n    setNewAuthor(event.target.value)\r\n  }\r\n\r\n  const handleUrlChange = (event) => {\r\n    setNewUrl(event.target.value)\r\n  }\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    createBlog({\r\n      title: newBlog,\r\n      author: newAuthor,\r\n      url: newUrl,\r\n    })\r\n      setNewBlog('')\r\n      setNewAuthor('')\r\n      setNewUrl('')\r\n  }\r\n\r\n    return (\r\n      <div>\r\n        <h2>create new</h2>\r\n\r\n        <form onSubmit={addBlog}>\r\n        <div>\r\n          title:\r\n          <input\r\n            id='title'\r\n            value={newBlog}\r\n            onChange={handleBlogChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          author:\r\n          <input\r\n            id='author'\r\n            value={newAuthor}\r\n            onChange={handleAuthorChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          url:\r\n          <input\r\n            id='url'\r\n            value={newUrl}\r\n            onChange={handleUrlChange}\r\n          />\r\n        </div>\r\n        <button id=\"create-button\" type=\"submit\">\r\n            create</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default BlogForm","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>{props.buttonLabel2}</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport Notification from './components/Notification'\r\nimport LoginForm from './components/LoginForm'\r\nimport BlogForm from './components/BlogForm'\r\nimport Togglable from './components/Togglable'\r\nimport loginService from './services/login'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [user, setUser] = useState(null)\r\n  const blogFormRef = useRef()\r\n\r\n  useEffect(() => {\r\n    blogService.getAll()\r\n    .then(blogs =>\r\n      setBlogs( blogs )\r\n    )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const addBlog = (blogObject) => {\r\n    blogFormRef.current.toggleVisibility()\r\n    blogService\r\n    .create(blogObject)\r\n    .then(returnedBlog => {\r\n      setErrorMessage (`a new blog ${blogObject.title} by ${blogObject.author} was added`)\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        returnedBlog.user=user\r\n      setBlogs(blogs.concat(returnedBlog))\r\n    })\r\n    .catch(() => {\r\n      setErrorMessage ('error: wrong format')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)})\r\n  }\r\n\r\n  const updateBlog = async (blog) => {\r\n    await blogService\r\n    .update(blog.id, blog)\r\n    const index = blogs.findIndex((blogToUpdate) => blogToUpdate.id === blog.id)\r\n    const updatedBlogs = [...blogs]\r\n    updatedBlogs[index] = blog\r\n    setBlogs(updatedBlogs)\r\n}\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      )\r\n\r\n      blogService.setToken(user.token)\r\n\r\n      setUsername('')\r\n      setPassword('')\r\n      setUser(user)\r\n    } catch (exception) {\r\n      setErrorMessage('error: wrong username or password')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleRemove = async (blog) => {\r\n\r\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}`))\r\n  {\r\n    try {\r\n    await blogService\r\n      .remove(blog.id)\r\n        setErrorMessage (`${blog.title} was removed`)\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setBlogs(blogs.filter(b => b.id !== blog.id ))\r\n\r\n    }\r\n    catch (exception) {\r\n        setErrorMessage (`Information of ${blog.title} has already been removed from server`)\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n          setBlogs(blogs.filter(b => b.id !== blog.id))\r\n      }\r\n\r\n  }\r\n   }\r\n\r\n  const loginForm = () => (\r\n    <Togglable buttonLabel=\"log in\" buttonLabel2=\"cancel\">\r\n          <LoginForm\r\n            username={username}\r\n            password={password}\r\n            handleUsernameChange={({ target }) => setUsername(target.value)}\r\n            handlePasswordChange={({ target }) => setPassword(target.value)}\r\n            handleSubmit={handleLogin}\r\n          />\r\n          </Togglable>\r\n  )\r\n\r\n  const handleLogout = () => {\r\n    console.log('logout')\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n    setUser(null)\r\n  }\r\n\r\n  const blogForm = () => (\r\n   <Togglable buttonLabel=\"create new blog\" buttonLabel2=\"cancel\" ref={blogFormRef}>\r\n      <BlogForm createBlog={addBlog} />\r\n    </Togglable >\r\n  )\r\n\r\n  if (user === null) {\r\n    return (\r\n      <div>\r\n        <h2>log in to application</h2>\r\n        <Notification message={errorMessage} />\r\n        {loginForm()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <h2>blogs</h2>\r\n      <Notification message={errorMessage} />\r\n      <p>{user.name} logged in <button onClick={handleLogout}> logout</button> </p>\r\n\r\n      {blogForm()}\r\n\r\n      {blogs.sort((a, b) => b.likes - a.likes).map(blog =>\r\n        <Blog key={blog.id} blog={blog} updateBlog={updateBlog} handleRemove={handleRemove} user={user}/>\r\n      )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}