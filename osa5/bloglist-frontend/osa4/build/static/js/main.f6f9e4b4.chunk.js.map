{"version":3,"sources":["components/Blog.js","services/blogs.js","components/Notification.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","setToken","newToken","Notification","message","className","login","credentials","App","useState","blogs","setBlogs","newBlog","setNewBlog","newAuthor","setNewAuthor","newUrl","setNewUrl","username","setUsername","password","setPassword","errorMessage","setErrorMessage","user","setUser","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","addBlog","event","preventDefault","blogObject","url","returnedBlog","concat","handleBlogChange","console","log","target","value","handleAuthorChange","handleUrlChange","handleLogin","loginService","setItem","stringify","setTimeout","onSubmit","type","name","onChange","onClick","removeItem","map","id","ReactDOM","render","document","getElementById"],"mappings":"qMAOeA,EANF,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OACX,gCACGA,EAAKC,MADR,IACgBD,EAAKE,W,gBCFjBC,EAAU,aAEZC,EAAQ,KAoBG,GAAEC,OALF,WAEb,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAGlBC,OAdb,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,IAFf,SAKUE,IAAMW,KAAKd,EAASS,EAAWE,GALzC,cAKPL,EALO,yBAMNA,EAASC,MANH,2CAAH,sDAcqBQ,SAlBhB,SAAAC,GACff,EAAK,iBAAae,KCQLC,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKC,UAAU,QAAf,SACGD,KCDQ,GAAEE,MALN,uCAAG,WAAMC,GAAN,eAAAX,EAAA,sEACWP,IAAMW,KAHf,aAG6BO,GAD/B,cACNf,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDC6KIe,EA1KH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGkBJ,mBAAS,IAH3B,mBAGTK,EAHS,KAGEC,EAHF,OAIYN,mBAAS,IAJrB,mBAITO,EAJS,KAIDC,EAJC,OAKgBR,mBAAS,IALzB,mBAKTS,EALS,KAKCC,EALD,OAMgBV,mBAAS,IANzB,mBAMTW,EANS,KAMCC,EAND,OAOwBZ,mBAAS,MAPjC,mBAOTa,EAPS,KAOKC,EAPL,OAQQd,mBAAS,MARjB,mBAQTe,EARS,KAQHC,EARG,KAUhBC,qBAAU,WACRC,EAAYvC,SACXG,MAAK,SAAAmB,GAAK,OACTC,EAAUD,QAEX,IAEHgB,qBAAU,WACR,IAAME,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAIH,EAAgB,CAClB,IAAMJ,EAAOQ,KAAKC,MAAML,GACxBH,EAAQD,GACRG,EAAY1B,SAASuB,EAAKrC,UAE3B,IAEH,IAAM+C,EAAU,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBrD,MAAO4B,EACP3B,OAAQ6B,EACRwB,IAAKtB,GAGPW,EACCjC,OAAO2C,GACP9C,MAAK,SAAAgD,GACJ5B,EAASD,EAAM8B,OAAOD,IACtB1B,EAAW,IACXE,EAAa,IACbE,EAAU,QAIRwB,EAAmB,SAACN,GACxBO,QAAQC,IAAIR,EAAMS,OAAOC,OACzBhC,EAAWsB,EAAMS,OAAOC,QAGpBC,EAAqB,SAACX,GAC1BO,QAAQC,IAAIR,EAAMS,OAAOC,OACzB9B,EAAaoB,EAAMS,OAAOC,QAGtBE,EAAkB,SAACZ,GACvBO,QAAQC,IAAIR,EAAMS,OAAOC,OACzB5B,EAAUkB,EAAMS,OAAOC,QAGnBG,EAAW,uCAAG,WAAOb,GAAP,eAAAvC,EAAA,6DAClBuC,EAAMC,iBADY,kBAIGa,EAAa3C,MAAM,CACpCY,WAAUE,aALI,OAIVI,EAJU,OAOhBG,EAAY1B,SAASuB,EAAKrC,OAE1B0C,OAAOC,aAAaoB,QAClB,oBAAqBlB,KAAKmB,UAAU3B,IAGtCC,EAAQD,GACRL,EAAY,IACZE,EAAY,IAfI,kDAiBhBE,EAAgB,qBAChB6B,YAAW,WACT7B,EAAgB,QACf,KApBa,0DAAH,sDAqFjB,OAAa,OAATC,EAEA,gCACE,uDACA,cAAC,EAAD,CAAcpB,QAASkB,IAhE3B,uBAAM+B,SAAUL,EAAhB,UACE,2CAEI,uBACAM,KAAK,OACLT,MAAO3B,EACPqC,KAAK,WACLC,SAAU,gBAAGZ,EAAH,EAAGA,OAAH,OAAgBzB,EAAYyB,EAAOC,aAGjD,2CAEI,uBACAS,KAAK,WACLT,MAAOzB,EACPmC,KAAK,WACLC,SAAU,gBAAGZ,EAAH,EAAGA,OAAH,OAAgBvB,EAAYuB,EAAOC,aAGjD,wBAAQS,KAAK,SAAb,yBAoDF,gCACE,uCACA,cAAC,EAAD,CAAclD,QAASkB,IACvB,8BAAIE,EAAK+B,KAAT,cAAyB,wBAAQE,QAnDhB,WACnBf,QAAQC,IAAI,UACZd,OAAOC,aAAa4B,WAAW,qBAC/BjC,EAAQ,OAgDmB,qBAAzB,OA5CF,uBAAM4B,SAAUnB,EAAhB,UACE,4CACA,yCACQ,uBACPoB,KAAK,OACLT,MAAOjC,EACP2C,KAAK,QACJC,SAAUf,OAGZ,0CACS,uBACPa,KAAK,OACLT,MAAO/B,EACPyC,KAAK,SACLC,SAAUV,OAGZ,uCACM,uBACJQ,KAAK,OACLT,MAAO7B,EACPuC,KAAK,MACLC,SAAUT,OAGZ,wBAAQO,KAAK,SAAb,uBAsBC5C,EAAMiD,KAAI,SAAA5E,GAAI,OACb,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAK6E,WCrKxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f6f9e4b4.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({blog}) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>  \r\n)\r\n\r\nexport default Blog","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, setToken }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport Notification from './components/Notification'\r\nimport loginService from './services/login' \r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [newBlog, setNewBlog] = useState('')\r\n  const [newAuthor, setNewAuthor] = useState('')\r\n  const [newUrl, setNewUrl] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [user, setUser] = useState(null)\r\n\r\n  useEffect(() => {\r\n    blogService.getAll()\r\n    .then(blogs =>\r\n      setBlogs( blogs )\r\n    )  \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    const blogObject = {\r\n      title: newBlog,\r\n      author: newAuthor,\r\n      url: newUrl,\r\n      \r\n    }\r\n    blogService\r\n    .create(blogObject)\r\n    .then(returnedBlog => { \r\n      setBlogs(blogs.concat(returnedBlog))\r\n      setNewBlog('')\r\n      setNewAuthor('')\r\n      setNewUrl('')\r\n    }) \r\n  }\r\n\r\n  const handleBlogChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewBlog(event.target.value)\r\n  }\r\n\r\n  const handleAuthorChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewAuthor(event.target.value)\r\n  }\r\n\r\n  const handleUrlChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewUrl(event.target.value)\r\n  }\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    \r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n      blogService.setToken(user.token)\r\n\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      ) \r\n      \r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setErrorMessage('wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        username\r\n          <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n          <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">login</button>\r\n    </form>\r\n  )\r\n  \r\n  const handleLogout = () => {\r\n    console.log(\"logout\")\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n    setUser(null)\r\n  }\r\n\r\n  const blogForm = () => (\r\n    <form onSubmit={addBlog}>\r\n      <h2>create new</h2>\r\n      <div>\r\n        title:<input\r\n       type=\"text\"\r\n       value={newBlog}\r\n       name=\"Title\"\r\n        onChange={handleBlogChange}\r\n      />\r\n      </div>\r\n      <div>\r\n        author:<input\r\n        type=\"text\"\r\n        value={newAuthor}\r\n        name=\"Author\"\r\n        onChange={handleAuthorChange}\r\n      />\r\n      </div>\r\n      <div>\r\n        url:<input\r\n        type=\"text\"\r\n        value={newUrl}\r\n        name=\"Url\"\r\n        onChange={handleUrlChange}\r\n      />\r\n      </div>\r\n      <button type=\"submit\">create</button>\r\n    </form>  \r\n  )  \r\n\r\n  if (user === null) {\r\n    return (\r\n      <div>\r\n        <h2>log in to application</h2>\r\n        <Notification message={errorMessage} />\r\n        {loginForm()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>blogs</h2>\r\n      <Notification message={errorMessage} />\r\n      <p>{user.name} logged in <button onClick={handleLogout}> logout</button> </p>\r\n\r\n      {blogForm()}\r\n\r\n      {blogs.map(blog =>\r\n        <Blog key={blog.id} blog={blog} />\r\n      )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}